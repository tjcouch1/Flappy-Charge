<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = .5;
jumpspd = 3;

ymov = 0;

start = false;

scr = 0;
highscr = 0;

difficulty = 0;
difficultyinc = 1;

chargecap = room_speed / 3;
charge = chargecap;

spd = 2;
chargespd = 3;

dead = false;

firststart = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_up) || keyboard_check_pressed(vk_space) || mouse_check_button_pressed(mb_left))
{
    if (start &amp;&amp; !dead)
    {
        ymov = -jumpspd;
    }
    else
    {
        start = true;
        firststart = true;
    }
}

if (!firststart &amp;&amp; !dead)
{
    if (keyboard_check_pressed(vk_right) || keyboard_check_pressed(ord("C") || mouse_check_button_pressed(mb_right)))
    {
        if (charge &lt;= 0)
        {
            //start charge
            charge = chargecap;
        }
    }
    
    if (!charge)
        ymov += grav;
    else ymov = 0;
    
    charge--;
    difficulty += difficultyinc;
}

y += ymov;

//move stuff
with (all)
    if (object_index != obj_player &amp;&amp; (other.start || object_index == obj_floor))
    {
        if (other.charge)
            x -= chargespd;
        else x -= spd;
    }

if (start)
{
    //check collision
    for (var i = 0; i &lt; instance_number(obj_tube); i++)
    {
        var block = instance_find(obj_tube, i);
        if (place_meeting(x, y, block))
            if (other.charge &gt; 0 &amp;&amp; block.object_index == obj_tube_cracked)
                instance_destroy();
            else player_die();
    }
    
    //create blocks
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
